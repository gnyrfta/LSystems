This program generates Lindenmeyer systems, also called L-Systems.
An L-System is defined by:
* A starting pattern. 
* Replacement rules for the different symbols in the pattern.
* Interpretation of the different symbols. 
A mathematician might complain about the above definition.
In this program, the symbols have these meanings:

F = Move forward, draw a line of length 'd'. 
+ = turn left an angle alpha.
- = turn right an angle alpha.
[ = store current position and direction.
] = go to last store position and direction.
All other symbols, such as X or Y, have no interpretation and exist only to control the way the array grows.

The user chooses starting pattern, the angle alpha and the amount of iterations. 
After the array has been generated by applying the rules the specified amount of times, a TURTLE interprets 
the resulting array. The turtle starts pointing to the right and changes direction and position as it encounters the different symbols in the array, drawing a line in its path wich produces a pattern. 

Some examples of L-Systems include the Koch Snowflake, the Sierpinski triangle but also patterns that form images and shapes that look very much like some plants! For more info on this visit the wiki page: http://en.wikipedia.org/wiki/L-system.

The classes: 
LSystem - The method LSystem.pattern generates the final array. 
DrawLSystem - Updates the Turtle and draws lines in its wake.
LookAtLSystem - The Interface where the user specifies starting pattern, angle alpha, replacement rules and iterations.
Turtle - Contains Turtle variables, and positions stored when encountering '[' (the "pushdown symbol").
IntegerField - A TextField for Integers, written by Colin Bell
